"""rename_metadata_field_in_credit_transactions

Revision ID: fd531aae229f
Revises: 8f1059a1231c
Create Date: 2025-06-29 10:02:03.858931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'fd531aae229f'
down_revision: Union[str, Sequence[str], None] = '8f1059a1231c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('messages')
    op.drop_table('agents')
    op.drop_table('connections')
    with op.batch_alter_table('credit_transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_transactions_created_at'))
        batch_op.drop_index(batch_op.f('ix_credit_transactions_user_id'))

    op.drop_table('credit_transactions')
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversations_project_id'))

    op.drop_table('conversations')
    op.drop_table('projects')
    op.drop_table('voice_connections')
    op.drop_table('podcast_jobs')
    op.drop_table('model_credit_costs')
    op.drop_table('project_files')
    op.drop_table('project_vm_services')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_vm_services',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=False),
    sa.Column('service_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('service_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('port', sa.INTEGER(), nullable=True),
    sa.Column('command', sa.TEXT(), nullable=False),
    sa.Column('working_directory', sa.VARCHAR(length=500), nullable=True),
    sa.Column('environment_vars', sqlite.JSON(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'stopped'"), nullable=False),
    sa.Column('process_id', sa.INTEGER(), nullable=True),
    sa.Column('service_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('auto_start', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('restart_policy', sa.VARCHAR(length=20), server_default=sa.text("'no'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('last_started_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_files',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=500), nullable=False),
    sa.Column('vm_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('content_type', sa.VARCHAR(length=100), nullable=False),
    sa.Column('file_size', sa.INTEGER(), nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), nullable=True),
    sa.Column('is_synced_to_vm', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('last_sync_at', sa.DATETIME(), nullable=True),
    sa.Column('last_modified_in_vm', sa.DATETIME(), nullable=True),
    sa.Column('is_executable', sa.BOOLEAN(), server_default=sa.text("'false'"), nullable=False),
    sa.Column('file_permissions', sa.VARCHAR(length=10), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_credit_costs',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('provider', sa.VARCHAR(length=100), nullable=False),
    sa.Column('model_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('cost_per_message', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('cost_per_1k_tokens', sa.INTEGER(), nullable=True),
    sa.Column('is_default_model', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'model_name')
    )
    op.create_table('podcast_jobs',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('conversation_id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), nullable=False),
    sa.Column('audio_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('total_messages', sa.INTEGER(), nullable=True),
    sa.Column('processed_messages', sa.INTEGER(), nullable=True),
    sa.Column('duration_seconds', sa.FLOAT(), nullable=True),
    sa.Column('file_size_bytes', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('voice_connections',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('provider', sa.VARCHAR(length=100), nullable=False),
    sa.Column('provider_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('voice_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('speed', sa.FLOAT(), nullable=False),
    sa.Column('pitch', sa.FLOAT(), nullable=False),
    sa.Column('stability', sa.FLOAT(), nullable=False),
    sa.Column('clarity', sa.FLOAT(), nullable=False),
    sa.Column('style', sa.VARCHAR(length=100), nullable=False),
    sa.Column('api_key', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('api_key_encrypted', sa.BOOLEAN(), nullable=False),
    sa.Column('base_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('is_cloud_proxy', sa.BOOLEAN(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('vm_status', sa.VARCHAR(length=50), server_default=sa.text("'inactive'"), nullable=False),
    sa.Column('vm_config', sqlite.JSON(), nullable=True),
    sa.Column('vm_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('storage_mount_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('storage_config', sqlite.JSON(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('auto_sync_files', sa.BOOLEAN(), server_default=sa.text("'true'"), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=False),
    sa.Column('last_vm_activity', sa.DATETIME(), nullable=True),
    sa.Column('vm_container_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('instructions', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversations',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('agent_id', sa.VARCHAR(), nullable=True),
    sa.Column('participants', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('is_shared', sa.BOOLEAN(), nullable=False),
    sa.Column('project_id', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='conversations_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_conversations_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversations_project_id'), ['project_id'], unique=False)

    op.create_table('credit_transactions',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('amount', sa.INTEGER(), nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('metadata', sqlite.JSON(), nullable=True),
    sa.Column('balance_after', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_transactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credit_transactions_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_transactions_created_at'), ['created_at'], unique=False)

    op.create_table('connections',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('provider', sa.VARCHAR(length=100), nullable=False),
    sa.Column('model_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('api_key', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('base_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('api_key_encrypted', sa.BOOLEAN(), nullable=False),
    sa.Column('mcp_server_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('mcp_server_config', sqlite.JSON(), nullable=True),
    sa.Column('available_tools', sqlite.JSON(), nullable=True),
    sa.Column('mcp_capabilities', sqlite.JSON(), nullable=True),
    sa.Column('is_managed', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_default', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_connections_user_id')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agents',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('prompt', sa.TEXT(), nullable=False),
    sa.Column('characteristics', sa.TEXT(), nullable=False),
    sa.Column('connection_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('model_config', sqlite.JSON(), nullable=False),
    sa.Column('chat_style', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('voice_connection_id', sa.VARCHAR(), nullable=True),
    sa.Column('voice_enabled', sa.BOOLEAN(), nullable=False),
    sa.Column('podcast_settings', sqlite.JSON(), nullable=True),
    sa.Column('selected_mcp_tools', sqlite.JSON(), nullable=True),
    sa.Column('mcp_tool_config', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_agents_user_id'),
    sa.ForeignKeyConstraint(['voice_connection_id'], ['voice_connections.id'], name='fk_agents_voice_connection_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('conversation_id', sa.VARCHAR(), nullable=False),
    sa.Column('agent_id', sa.VARCHAR(), nullable=True),
    sa.Column('role', sa.VARCHAR(length=50), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('speaker', sa.VARCHAR(length=255), nullable=True),
    sa.Column('message_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('credits', sa.INTEGER(), server_default=sa.text("'100'"), nullable=False),
    sa.Column('credits_balance', sa.INTEGER(), server_default=sa.text("'100'"), nullable=False),
    sa.Column('credits_used', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('credits_purchased', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('credit_plan', sa.VARCHAR(length=50), nullable=True),
    sa.Column('last_credit_refill_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=1)

    # ### end Alembic commands ###
